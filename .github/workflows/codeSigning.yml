name: code_Signing

# Controls when the workflow will run
on: 
  push:
    tags:
        - 'v*'
 
jobs:
  release:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [windows-latest]

    steps:
        - name: Check out Git repository
          uses: actions/checkout@v4 
     
        - name: Install DigiCert Client tools from Github Custom Actions marketplace
          id: Digicert_Code_Signing_Snippet
          uses: digicert/ssm-code-signing@v1.0.1        
          
        - name: List Checkout
          run: |
            dir

        - name: Setup Certificate
          run: |
            echo "${{ secrets.SM_CLIENT_CERT_FILE_B64 }}" | base64 --decode > /d/Certificate_pkcs12.p12
            cat /d/Certificate_pkcs12.p12
          shell: bash

          
        - name: Set variables
          id: variables
          run: |
            #echo "::set-output name=version::${GITHUB_REF#refs/tags/v}"
            echo "SM_HOST=${{ secrets.SM_HOST }}" >> "$GITHUB_ENV"
            echo "SM_API_KEY=${{ secrets.SM_API_KEY }}" >> "$GITHUB_ENV"
            echo "SM_CLIENT_CERT_FILE=D:\\Certificate_pkcs12.p12" >> "$GITHUB_ENV"
            echo "SM_CLIENT_CERT_PASSWORD=${{ secrets.SM_CLIENT_CERT_PASSWORD }}" >> "$GITHUB_ENV"
            echo "SM_CODE_SIGNING_CERT_SHA1_HASH=${{ secrets.SM_CODE_SIGNING_CERT_SHA1_HASH }}" >> "$GITHUB_ENV"
            echo "C:\Program Files (x86)\Windows Kits\10\App Certification Kit" >> $GITHUB_PATH
            echo "C:\Program Files (x86)\Microsoft SDKs\Windows\v10.0A\bin\NETFX 4.8.1 Tools" >> $GITHUB_PATH
            echo "C:\Program Files\DigiCert\DigiCert One Signing Manager Tools" >> $GITHUB_PATH
          shell: bash
          
        - name:  Remove MSI from Folder
          run: |
            dir
            del smtools-windows-x64.msi
            dir
          shell: cmd

        - name: SMCTL Health check
          run: |
            smctl healthcheck


        - name: Signing using certificate fingerprint      
          run: |
             smctl sign --fingerprint ${{ secrets.SM_CODE_SIGNING_CERT_SHA1_HASH }} --input "." --config-file path/to/pkcs11properties.cfg
             smctl sign --fingerprint ${{ secrets.SM_CODE_SIGNING_CERT_SHA1_HASH }} --input "."
          shell: cmd

      
        - name: Signing using keypair alias
          run: |
             smctl sign --keypair-alias CoolCats_Prod_01 --input "." --config-file path/to/pkcs11properties.cfg
             smctl sign --keypair-alias CoolCats_Prod_01 --input "."
          shell: cmd          

        - name: Signing using Signtool
          run: |
            smksp_cert_sync.exe
            #smctl sign --keypair-alias=CoolCats-Prod_01 --input="."
            #signtool.exe sign /sha1 ${{ secrets.SM_CODE_SIGNING_CERT_SHA1_HASH }} /tr http://timestamp.digicert.com /td SHA256 /fd SHA256 ".\\*.ps1"          
            signtool.exe sign /sha1 "de5f87f11cb9f415e97144ab21918bd3c0152ef8" /tr http://timestamp.digicert.com /td SHA256 /fd SHA256 "04 - Split PFX to Key and Cert.ps1"
            #smctl sign --fingerprint ${{ secrets.SM_CODE_SIGNING_CERT_SHA1_HASH }} --input .


        - name: List Checkout
          run: |
            dir

        - name: Upload artifacts
          uses: actions/upload-artifact@v4
          with:
            name: ${{ matrix.os }}
            path: .\\*.ps1
